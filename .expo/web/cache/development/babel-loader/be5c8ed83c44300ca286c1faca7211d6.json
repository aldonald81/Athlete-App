{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\19don\\\\OneDrive\\\\Desktop\\\\Athlete-App\\\\Athlete-App\\\\src\\\\screens\\\\CoachRegistrationScreen.js\";\n\nimport React, { useState } from \"react\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AuthForm from \"../components/AuthForm\";\nimport Spacer from \"../components/Spacer\";\nimport { firebase } from \"../../firebase/config\";\nimport AsyncStorage from '@react-native-community/async-storage';\n\nvar CoachRegistrationScreen = function CoachRegistrationScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      confirmPassword = _useState8[0],\n      setConfirmPassword = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      teamName = _useState10[0],\n      setTeamName = _useState10[1];\n\n  var onRegisterPress = function onRegisterPress() {\n    if (password !== confirmPassword) {\n      Alert.alert(\"Passwords don't match.\");\n      return;\n    }\n\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(function (response) {\n      var uid = response.user.uid;\n      var user = response.user;\n      user.updateProfile({\n        displayName: name\n      });\n      var data = {\n        id: uid,\n        email: email,\n        name: name,\n        type: \"coach\"\n      };\n      var newTeam = firebase.firestore().collection(\"teams\");\n      newTeam.add({\n        teamName: teamName,\n        mainCoachID: uid,\n        signUpCode: \"000000\",\n        coachCode: \"000000\"\n      }).then(function (docRef) {\n        newTeam.doc(docRef.id).collection(\"associateCoaches\").doc(uid).set(data).then(function () {\n          var userRef = firebase.firestore().collection(\"users\");\n          userRef.doc(uid).set({\n            teamId: docRef.id,\n            type: \"coach\",\n            name: name\n          }).then(function () {\n            navigation.navigate(\"coachFlow\");\n          }).catch(function (error) {\n            alert(error);\n          });\n        }).catch(function (error) {\n          alert(error);\n        });\n      }).catch(function (error) {\n        alert(error);\n      });\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.screenStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAwareScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Coach/Team Registration\"), React.createElement(AuthForm, {\n    text: \"Full Name\",\n    onTermChange: setName,\n    cap: \"words\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), React.createElement(AuthForm, {\n    text: \"Email\",\n    onTermChange: setEmail,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), React.createElement(AuthForm, {\n    text: \"Password\",\n    onTermChange: setPassword,\n    secure: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), React.createElement(AuthForm, {\n    text: \"Confirm Password\",\n    onTermChange: setConfirmPassword,\n    secure: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), React.createElement(AuthForm, {\n    text: \"Team Name\",\n    onTermChange: setTeamName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), React.createElement(Spacer, {\n    space: \"7%\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: onRegisterPress,\n    style: styles.buttonStyle,\n    activeOpacity: 0.7,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTextStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Register\")))));\n};\n\nCoachRegistrationScreen.navigationOptions = {\n  headerStyle: {\n    backgroundColor: \"black\",\n    shadowColor: \"transparent\"\n  },\n  headerTintColor: \"#8ecfff\",\n  headerBackTitle: \"Back\",\n  title: \"\"\n};\nvar styles = StyleSheet.create({\n  textStyle: {\n    fontSize: 30,\n    color: \"white\",\n    fontFamily: \"goodTimes\",\n    textAlign: \"center\"\n  },\n  screenStyle: {\n    flex: 1,\n    backgroundColor: \"black\"\n  },\n  buttonStyle: {\n    height: 100,\n    width: 200,\n    borderColor: \"#8ecfff\",\n    marginBottom: 30,\n    borderRadius: 50,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderWidth: 5\n  },\n  buttonContainer: {\n    alignItems: \"center\"\n  },\n  buttonTextStyle: {\n    fontWeight: \"bold\",\n    color: \"#8ecfff\",\n    fontSize: 30,\n    fontFamily: \"goodTimes\"\n  }\n});\nexport default CoachRegistrationScreen;","map":{"version":3,"sources":["C:/Users/19don/OneDrive/Desktop/Athlete-App/Athlete-App/src/screens/CoachRegistrationScreen.js"],"names":["React","useState","KeyboardAwareScrollView","AuthForm","Spacer","firebase","AsyncStorage","CoachRegistrationScreen","navigation","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","teamName","setTeamName","onRegisterPress","Alert","alert","auth","createUserWithEmailAndPassword","then","response","uid","user","updateProfile","displayName","data","id","type","newTeam","firestore","collection","add","mainCoachID","signUpCode","coachCode","docRef","doc","set","userRef","teamId","navigate","catch","error","styles","screenStyle","textStyle","buttonContainer","buttonStyle","buttonTextStyle","navigationOptions","headerStyle","backgroundColor","shadowColor","headerTintColor","headerBackTitle","title","StyleSheet","create","fontSize","color","fontFamily","textAlign","flex","height","width","borderColor","marginBottom","borderRadius","justifyContent","alignItems","borderWidth","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\nimport { View, StyleSheet, Text, TouchableOpacity, Alert } from \"react-native\";\r\nimport AuthForm from \"../components/AuthForm\";\r\nimport Spacer from \"../components/Spacer\";\r\nimport { firebase } from \"../../firebase/config\";\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\n\r\nconst CoachRegistrationScreen = ({ navigation }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [teamName, setTeamName] = useState(\"\");\r\n\r\n  const onRegisterPress = () => {\r\n    if (password !== confirmPassword) {\r\n      Alert.alert(\"Passwords don't match.\");\r\n      return;\r\n    }\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((response) => {\r\n        const uid = response.user.uid;\r\n        const user = response.user;\r\n        user.updateProfile({\r\n          displayName: name\r\n        });\r\n        const data = {\r\n          id: uid,\r\n          email,\r\n          name,\r\n          type: \"coach\"\r\n        };\r\n        const newTeam = firebase.firestore().collection(\"teams\");\r\n        newTeam\r\n          .add({\r\n            teamName: teamName,\r\n            mainCoachID: uid,\r\n            signUpCode: \"000000\",\r\n            coachCode: \"000000\",\r\n          })\r\n          .then((docRef) => {\r\n            newTeam\r\n              .doc(docRef.id)\r\n              .collection(\"associateCoaches\")\r\n              .doc(uid)\r\n              .set(data)\r\n              .then(() => {\r\n                const userRef = firebase.firestore().collection(\"users\");\r\n                userRef\r\n                  .doc(uid)\r\n                  .set({ teamId: docRef.id, type: \"coach\", name})\r\n                  .then(() => {\r\n                    navigation.navigate(\"coachFlow\");\r\n                  })\r\n                  .catch((error) => {\r\n                    alert(error);\r\n                  });\r\n              })\r\n              .catch((error) => {\r\n                alert(error);\r\n              });\r\n          })\r\n          .catch((error) => {\r\n            alert(error);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        alert(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.screenStyle}>\r\n      <KeyboardAwareScrollView>\r\n        <Text style={styles.textStyle}>Coach/Team Registration</Text>\r\n        <AuthForm text=\"Full Name\" onTermChange={setName} cap=\"words\" />\r\n        <AuthForm text=\"Email\" onTermChange={setEmail} />\r\n        <AuthForm text=\"Password\" onTermChange={setPassword} secure={true} />\r\n        <AuthForm\r\n          text=\"Confirm Password\"\r\n          onTermChange={setConfirmPassword}\r\n          secure={true}\r\n        />\r\n        <AuthForm text=\"Team Name\" onTermChange={setTeamName} />\r\n        <Spacer space={\"7%\"} />\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity\r\n            onPress={onRegisterPress}\r\n            style={styles.buttonStyle}\r\n            activeOpacity={0.7}\r\n          >\r\n            <Text style={styles.buttonTextStyle}>Register</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </KeyboardAwareScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nCoachRegistrationScreen.navigationOptions = {\r\n  headerStyle: {\r\n    backgroundColor: \"black\",\r\n    shadowColor: \"transparent\",\r\n  },\r\n  headerTintColor: \"#8ecfff\",\r\n  headerBackTitle: \"Back\",\r\n  title: \"\",\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  textStyle: {\r\n    fontSize: 30,\r\n    color: \"white\",\r\n    fontFamily: \"goodTimes\",\r\n    textAlign: \"center\",\r\n  },\r\n  screenStyle: {\r\n    flex: 1,\r\n    backgroundColor: \"black\",\r\n  },\r\n  buttonStyle: {\r\n    height: 100,\r\n    width: 200,\r\n    borderColor: \"#8ecfff\",\r\n    marginBottom: 30,\r\n    borderRadius: 50,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderWidth: 5,\r\n  },\r\n  buttonContainer: {\r\n    alignItems: \"center\",\r\n  },\r\n  buttonTextStyle: {\r\n    fontWeight: \"bold\",\r\n    color: \"#8ecfff\",\r\n    fontSize: 30,\r\n    fontFamily: \"goodTimes\",\r\n  },\r\n});\r\n\r\nexport default CoachRegistrationScreen;\r\n"]},"metadata":{},"sourceType":"module"}