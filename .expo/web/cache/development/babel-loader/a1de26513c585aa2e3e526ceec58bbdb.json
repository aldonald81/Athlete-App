{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\19don\\\\OneDrive\\\\Desktop\\\\Athlete-App\\\\Athlete-App\\\\src\\\\screens\\\\AthleteRegistrationScreen.js\";\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Spacer from \"../components/Spacer\";\nimport AuthForm from \"../components/AuthForm\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { firebase } from \"../../firebase/config\";\n\nvar AthleteRegistrationScreen = function AthleteRegistrationScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      confirmPassword = _useState8[0],\n      setConfirmPassword = _useState8[1];\n\n  var onRegisterPress = function onRegisterPress() {\n    if (password !== confirmPassword) {\n      Alert.alert(\"Passwords don't match.\");\n      return;\n    }\n\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(function (response) {\n      var uid = response.user.uid;\n      var user = response.user;\n      user.updateProfile({\n        displayName: name\n      });\n      var data = {\n        id: uid,\n        email: email,\n        name: name,\n        type: \"athlete\"\n      };\n      var Team = firebase.firestore().collection(\"teams\");\n      Team.where(\"signUpCode\", \"==\", \"000000\").get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          Team.doc(doc.id).collection(\"athletes\").doc(uid).set(data).then(function () {\n            var userRef = firebase.firestore().collection(\"users\");\n            userRef.doc(uid).set({\n              teamId: doc.id,\n              type: \"athlete\",\n              name: name\n            }).then(function () {\n              navigation.navigate(\"athleteFlow\");\n            }).catch(function (error) {\n              alert(error);\n            });\n          }).catch(function (error) {\n            alert(error);\n          });\n        });\n      }).catch(function (error) {\n        console.log(\"here\");\n        alert(error);\n      });\n    }).catch(function (error) {\n      console.log(\"here\");\n      alert(error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.viewStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, React.createElement(KeyboardAwareScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Athlete Registration\"), React.createElement(AuthForm, {\n    text: \"Full Name\",\n    onTermChange: setName,\n    cap: \"words\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), React.createElement(AuthForm, {\n    text: \"Email\",\n    onTermChange: setEmail,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), React.createElement(AuthForm, {\n    text: \"Password\",\n    onTermChange: setPassword,\n    secure: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), React.createElement(AuthForm, {\n    text: \"Confirm Password\",\n    onTermChange: setConfirmPassword,\n    secure: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), React.createElement(Spacer, {\n    space: \"7%\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: onRegisterPress,\n    style: styles.buttonStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.opacityStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Register\")))));\n};\n\nAthleteRegistrationScreen.navigationOptions = {\n  headerStyle: {\n    backgroundColor: \"black\",\n    shadowColor: 'transparent'\n  },\n  headerTintColor: \"#8ecfff\",\n  headerBackTitle: \"Back\",\n  title: \"\"\n};\nvar styles = StyleSheet.create({\n  textStyle: {\n    fontSize: 30,\n    color: \"white\",\n    fontFamily: \"goodTimes\",\n    textAlign: \"center\"\n  },\n  viewStyle: {\n    flex: 1,\n    backgroundColor: \"black\"\n  },\n  opacityStyle: {\n    color: '#8ecfff',\n    fontSize: 25\n  },\n  buttonStyle: {\n    height: 75,\n    width: 150,\n    borderColor: \"#8ecfff\",\n    marginBottom: 30,\n    borderRadius: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 5\n  },\n  buttonContainer: {\n    alignItems: 'center'\n  }\n});\nexport default AthleteRegistrationScreen;","map":{"version":3,"sources":["C:/Users/19don/OneDrive/Desktop/Athlete-App/Athlete-App/src/screens/AthleteRegistrationScreen.js"],"names":["React","useState","Spacer","AuthForm","KeyboardAwareScrollView","firebase","AthleteRegistrationScreen","navigation","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","onRegisterPress","Alert","alert","auth","createUserWithEmailAndPassword","then","response","uid","user","updateProfile","displayName","data","id","type","Team","firestore","collection","where","get","querySnapshot","forEach","doc","set","userRef","teamId","navigate","catch","error","console","log","styles","viewStyle","textStyle","buttonContainer","buttonStyle","opacityStyle","navigationOptions","headerStyle","backgroundColor","shadowColor","headerTintColor","headerBackTitle","title","StyleSheet","create","fontSize","color","fontFamily","textAlign","flex","height","width","borderColor","marginBottom","borderRadius","justifyContent","alignItems","borderWidth"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport { View, StyleSheet, Text, Button, TouchableOpacity, Alert } from \"react-native\";\r\nimport Spacer from '../components/Spacer';\r\nimport AuthForm from '../components/AuthForm';\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\nimport { firebase } from \"../../firebase/config\";\r\n\r\nconst AthleteRegistrationScreen = ({ navigation }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const onRegisterPress = () => {\r\n    if (password !== confirmPassword) {\r\n      Alert.alert(\"Passwords don't match.\");\r\n      return;\r\n    }\r\n    firebase.auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((response) => {\r\n        const uid = response.user.uid;\r\n        const user = response.user;\r\n        user.updateProfile({\r\n          displayName: name\r\n        });\r\n        const data = {\r\n          id: uid,\r\n          email,\r\n          name,\r\n          type: \"athlete\"\r\n        };\r\n        const Team = firebase.firestore().collection(\"teams\");\r\n        Team.where(\"signUpCode\", \"==\", \"000000\")\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          querySnapshot.forEach((doc) => {\r\n            Team.doc(doc.id)\r\n            .collection(\"athletes\")\r\n            .doc(uid)\r\n            .set(data)\r\n            .then(() => {\r\n              const userRef = firebase.firestore().collection(\"users\");\r\n                userRef\r\n                  .doc(uid)\r\n                  .set({ teamId: doc.id, type: \"athlete\", name})\r\n                  .then(() => {\r\n                    navigation.navigate(\"athleteFlow\");\r\n                  })\r\n                  .catch((error) => {\r\n                    alert(error);\r\n                  });\r\n            }).catch((error) => {\r\n              alert(error);\r\n            });\r\n          })\r\n\r\n        }).catch((error) => {\r\n          console.log(\"here\");\r\n          alert(error);\r\n        })\r\n\r\n      }).catch((error) => {\r\n        console.log(\"here\");\r\n        alert(error);\r\n      });\r\n        \r\n  };\r\n  return (\r\n      <View style = {styles.viewStyle}>\r\n        <KeyboardAwareScrollView>\r\n        <Text style = {styles.textStyle}>Athlete Registration</Text>\r\n        <AuthForm text = \"Full Name\" onTermChange= {setName} cap = \"words\"/>\r\n        <AuthForm text = \"Email\" onTermChange = {setEmail} />\r\n        <AuthForm text = \"Password\" onTermChange = {setPassword} secure = {true}/>\r\n        <AuthForm text = \"Confirm Password\" onTermChange = {setConfirmPassword} secure = {true}/>\r\n        <Spacer space={\"7%\"} />\r\n        <View style = {styles.buttonContainer}>\r\n          <TouchableOpacity onPress = {onRegisterPress}\r\n            style = {styles.buttonStyle}>\r\n            <Text style = {styles.opacityStyle}>Register</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        </KeyboardAwareScrollView>\r\n      </View>\r\n   \r\n  )\r\n};\r\n\r\nAthleteRegistrationScreen.navigationOptions = {\r\n  headerStyle: {\r\n    backgroundColor: \"black\",\r\n    shadowColor: 'transparent'\r\n  },\r\n  \r\n  headerTintColor: \"#8ecfff\",\r\n  headerBackTitle: \"Back\",\r\n  title: \"\"\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  textStyle: {\r\n    fontSize: 30,\r\n    color: \"white\",\r\n    fontFamily: \"goodTimes\",\r\n    textAlign: \"center\",\r\n  },\r\n  viewStyle: {\r\n    flex: 1,\r\n    backgroundColor: \"black\"\r\n  },\r\n  opacityStyle: {\r\n    color: '#8ecfff',\r\n    fontSize: 25\r\n  },\r\n  buttonStyle: {\r\n    height: 75,\r\n    width: 150,\r\n    borderColor: \"#8ecfff\",\r\n    marginBottom: 30,\r\n    borderRadius: 50,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderWidth: 5\r\n  },\r\n  buttonContainer: {\r\n    alignItems: 'center'\r\n  }\r\n});\r\n\r\nexport default AthleteRegistrationScreen;\r\n"]},"metadata":{},"sourceType":"module"}